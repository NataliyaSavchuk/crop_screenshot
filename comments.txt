–î–ª—è Android —Ç–µ–±–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –≤ AndroidManifest.xml –ø—Ä–∞–≤–∞:
<uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
<uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
<uses-permission android:name="android.permission.INTERNET"/>
<uses-permission android:name="android.permission.CAMERA" />
–ê –¥–ª—è iOS ‚Äî —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤ Info.plist:
<key>NSPhotoLibraryUsageDescription</key>
<string>Allow photo library access to pick images</string>
<key>NSCameraUsageDescription</key>
<string>Allow camera access to take pictures</string>


–Ω–µ—Ç. –¥–∞–≤–∞–π –µ—â–µ —Ä–∞–∑.
1. –£ —Å–∞–º–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –µ–≥–æ –æ—Ç–∫—Ä—ã—Ç—å) –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å: "–∞–∫—Ç–∏–≤–Ω–æ" / "–Ω–µ–∞–∫—Ç–∏–≤–Ω–æ" –∏ –ø–æ–¥–ø–∏—Å–∫–∞: "–ø—Ä–æ–±–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞" / "–ø–æ–¥–ø–∏—Å–∫–∞ –¥–æ –î–î.–ú–ú.–ì–ì–ì–ì" / "–ª–∞–π—Ñ—Ç–∞–π–º –ø–æ–¥–ø–∏—Å–∫–∞" / "–Ω–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏". –°—Ç–∞—Ç—É—Å "–∞–∫—Ç–∏–≤–Ω–æ" –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏ (–ª—é–±–æ–π –∏–∑ —Ç—Ä–µ—Ö). –í–∏–¥–∂–µ—Ç—ã –Ω–µ –Ω—É–∂–Ω—ã.
2. –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è "–∞–∫—Ç–∏–≤–Ω–æ", —Ç–æ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ (—Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç == —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è –∫–ª–∞–≤–∏—à) —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ –Ω–∞ —Å–µ–∫—É–Ω–¥—É –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —É–∂–µ –æ–±—Ä–µ–∑–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∞–ª—å–±–æ–º –≤ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è—Ö.
3. –õ–æ–≥–∏–∫–∞ –æ–±—Ä–µ–∑–∫–∏: –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–µ –∏–ª–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –ø—Ä–∏ —ç—Ç–æ–º –µ—Å–ª–∏ –Ω–∞–¥ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –µ—Å—Ç—å —Ç–µ–∫—Å—Ç, —Ç–æ —Ç–µ–∫—Å—Ç —Ç–æ–∂–µ –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å—Å—è –≤ —Å–∫—Ä–∏–Ω—à–æ—Ç (–∫–∞–∫ —á–∞—Å—Ç–æ –±—ã–≤–∞–µ—Ç –≤ –º–µ–º–∞—Ö).
4. –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç—å, –Ω–æ –ø–æ–∫–∞ –¥–µ–ª–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º.
–î–∞–≤–∞–π —Å–¥–µ–ª–∞–µ–º —Å—Ä–∞–∑—É –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –≤—Å–µ —Ñ–∞–π–ª—ã.

–ü–µ—Ä–≤—ã–π –¥—Ä–∞—Ñ—Ç: 
–û—Ç–ª–∏—á–Ω–æ, —Ç—ã –æ—á–µ–Ω—å —á—ë—Ç–∫–æ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–ª–∞! üî•  
–¢–µ–ø–µ—Ä—å –≤—Å—ë –ø–æ–Ω—è—Ç–Ω–æ: –Ω–∏–∫–∞–∫–∏—Ö —Ä—É—á–Ω—ã—Ö –≤—ã–±–æ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤, –Ω–∏–∫–∞–∫–∏—Ö —Å—Ç—Ä–∞–Ω–Ω—ã—Ö —ç–∫—Ä–∞–Ω–æ–≤ ‚Äî —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å, –ø–æ–¥–ø–∏—Å–∫–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç.

–î–∞–≤–∞–π —Å—Ä–∞–∑—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–ø—Ä–æ–µ–∫—Ç–∏—Ä—É–µ–º **—Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ –≤—Å–µ —Ñ–∞–π–ª—ã**, —É–∂–µ –ø–æ–¥ —Ç–≤–æ–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è. –ë–µ–∑ "–ª–∏—à–Ω–µ–≥–æ", –±–µ–∑ —Å—Ç–∞—Ä—ã—Ö –∑–∞–≥–ª—É—à–µ–∫.

---

# üóÇ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞

```
lib/
‚îú‚îÄ‚îÄ main.dart
‚îú‚îÄ‚îÄ app.dart
‚îú‚îÄ‚îÄ screens/
‚îÇ   ‚îî‚îÄ‚îÄ home_screen.dart
‚îú‚îÄ‚îÄ services/
‚îÇ   ‚îú‚îÄ‚îÄ screenshot_service.dart
‚îÇ   ‚îú‚îÄ‚îÄ subscription_service.dart
‚îú‚îÄ‚îÄ l10n/
‚îÇ   ‚îú‚îÄ‚îÄ app_localizations.dart
‚îÇ   ‚îú‚îÄ‚îÄ intl_en.arb
‚îú‚îÄ‚îÄ utils/
‚îÇ   ‚îî‚îÄ‚îÄ image_processing.dart
‚îÇ   ‚îî‚îÄ‚îÄ permissions_helper.dart
```

---

# üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–æ–≤

---

## 1. `main.dart`

```dart
import 'package:flutter/material.dart';
import 'app.dart';

void main() {
  runApp(const MyApp());
}
```

---

## 2. `app.dart`

```dart
import 'package:flutter/material.dart';
import 'package:flutter_localizations/flutter_localizations.dart';
import 'screens/home_screen.dart';
import 'l10n/app_localizations.dart';

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Crop Screenshot',
      debugShowCheckedModeBanner: false,
      home: const HomeScreen(),
      supportedLocales: const [
        Locale('en'),
      ],
      localizationsDelegates: const [
        AppLocalizations.delegate,
        GlobalMaterialLocalizations.delegate,
        GlobalWidgetsLocalizations.delegate,
        GlobalCupertinoLocalizations.delegate,
      ],
    );
  }
}
```

---

## 3. `screens/home_screen.dart`

```dart
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../services/subscription_service.dart';
import '../services/screenshot_service.dart';
import '../l10n/app_localizations.dart';

class HomeScreen extends StatelessWidget {
  const HomeScreen({super.key});

  @override
  Widget build(BuildContext context) {
    return MultiProvider(
      providers: [
        ChangeNotifierProvider(create: (_) => SubscriptionService()),
        ChangeNotifierProvider(create: (_) => ScreenshotService()),
      ],
      child: Scaffold(
        appBar: AppBar(
          title: Text(AppLocalizations.of(context)!.app_title),
        ),
        body: Consumer2<SubscriptionService, ScreenshotService>(
          builder: (context, subscription, screenshot, _) {
            return Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Text(
                    subscription.isActive
                        ? AppLocalizations.of(context)!.status_active
                        : AppLocalizations.of(context)!.status_inactive,
                    style: const TextStyle(fontSize: 20),
                  ),
                  const SizedBox(height: 20),
                  Text(
                    subscription.getSubscriptionText(context),
                    style: const TextStyle(fontSize: 16),
                  ),
                ],
              ),
            );
          },
        ),
      ),
    );
  }
}
```

---

## 4. `services/subscription_service.dart`

(–º–æ–¥–µ–ª—å –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ª–æ–≥–∏–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏)

```dart
import 'package:flutter/material.dart';
import '../l10n/app_localizations.dart';

enum SubscriptionType { none, trial, paidUntil, lifetime }

class SubscriptionService with ChangeNotifier {
  SubscriptionType _subscriptionType = SubscriptionType.trial;
  DateTime? _paidUntil;

  bool get isActive =>
      _subscriptionType == SubscriptionType.trial ||
      _subscriptionType == SubscriptionType.paidUntil && _paidUntil != null && _paidUntil!.isAfter(DateTime.now()) ||
      _subscriptionType == SubscriptionType.lifetime;

  SubscriptionType get subscriptionType => _subscriptionType;

  String getSubscriptionText(BuildContext context) {
    switch (_subscriptionType) {
      case SubscriptionType.trial:
        return AppLocalizations.of(context)!.trial_subscription;
      case SubscriptionType.paidUntil:
        if (_paidUntil != null) {
          return '${AppLocalizations.of(context)!.paid_until} ${_formatDate(_paidUntil!)}';
        } else {
          return AppLocalizations.of(context)!.no_subscription;
        }
      case SubscriptionType.lifetime:
        return AppLocalizations.of(context)!.lifetime_subscription;
      default:
        return AppLocalizations.of(context)!.no_subscription;
    }
  }

  String _formatDate(DateTime date) {
    return '${date.day.toString().padLeft(2, '0')}.${date.month.toString().padLeft(2, '0')}.${date.year}';
  }

  // –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  void setTrial() {
    _subscriptionType = SubscriptionType.trial;
    notifyListeners();
  }

  void setPaidUntil(DateTime date) {
    _subscriptionType = SubscriptionType.paidUntil;
    _paidUntil = date;
    notifyListeners();
  }

  void setLifetime() {
    _subscriptionType = SubscriptionType.lifetime;
    notifyListeners();
  }

  void removeSubscription() {
    _subscriptionType = SubscriptionType.none;
    _paidUntil = null;
    notifyListeners();
  }
}
```

---

## 5. `services/screenshot_service.dart`

(–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞)

```dart
import 'dart:async';
import 'dart:io';
import 'package:flutter/material.dart';
import 'package:path_provider/path_provider.dart';
import '../utils/image_processing.dart';

class ScreenshotService with ChangeNotifier {
  StreamSubscription<FileSystemEvent>? _screenshotSubscription;

  Future<void> startWatchingScreenshots() async {
    final Directory screenshotsDir = Directory('/storage/emulated/0/Pictures/Screenshots');

    if (await screenshotsDir.exists()) {
      _screenshotSubscription = screenshotsDir.watch().listen((event) async {
        if (event.type == FileSystemEvent.create) {
          final file = File(event.path);
          if (await file.exists()) {
            await _handleNewScreenshot(file);
          }
        }
      });
    }
  }

  Future<void> _handleNewScreenshot(File screenshot) async {
    final processedImage = await ImageProcessing.detectAndCropContent(screenshot);

    final Directory appPictures = await getApplicationDocumentsDirectory();
    final File savedFile = File('${appPictures.path}/cropped_${DateTime.now().millisecondsSinceEpoch}.jpg');
    await savedFile.writeAsBytes(await processedImage.readAsBytes());

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∫–∞–∑ –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–æ—à–∫–∞ —Å –æ–±—Ä–µ–∑–∞–Ω–Ω—ã–º —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º –Ω–∞ —Å–µ–∫—É–Ω–¥—É.
  }

  void disposeService() {
    _screenshotSubscription?.cancel();
  }
}
```

---

## 6. `utils/image_processing.dart`

(–ª–æ–≥–∏–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞)

```dart
import 'dart:io';

class ImageProcessing {
  static Future<File> detectAndCropContent(File originalImage) async {
    // –ü–æ–∫–∞ —Å—Ç–∞–≤–∏–º –ø—Ä–æ—Å—Ç—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É: –≤–æ–∑–≤—Ä–∞—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞.
    // –ü–æ—Ç–æ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç OpenCV –∞–Ω–∞–ª–∏–∑: –Ω–∞—Ö–æ–¥–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É + —Ç–µ–∫—Å—Ç —Å–≤–µ—Ä—Ö—É.
    return originalImage;
  }
}
```

(—Ä–µ–∞–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É —á–µ—Ä–µ–∑ OpenCV –¥–æ–±–∞–≤–∏–º —Å–ª–µ–¥—É—é—â–∏–º —à–∞–≥–æ–º)

---

## 7. `l10n/app_localizations.dart`

```dart
import 'package:flutter_gen/gen_l10n/app_localizations.dart';

export 'package:flutter_gen/gen_l10n/app_localizations.dart';
```

---

## 8. `l10n/intl_en.arb`

```json
{
  "app_title": "Crop Screenshot",
  "status_active": "Status: Active",
  "status_inactive": "Status: Inactive",
  "trial_subscription": "Trial Subscription",
  "paid_until": "Paid until",
  "lifetime_subscription": "Lifetime Subscription",
  "no_subscription": "No Subscription"
}
```

---

# ‚ú® –ò–¢–û–ì–û

- –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ **—Å—Ç–∞—Ç—É—Å** –∏ **—Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏**.
- –†–∞–±–æ—Ç–∞–µ—Ç "—Å–ª—É—à–∞—Ç–µ–ª—å" –ø–∞–ø–∫–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤.
- –ü—Ä–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–º —Å–∫—Ä–∏–Ω—à–æ—Ç–µ: –æ–±—Ä–µ–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –∫—Ä–∞—Ç–∫–∏–π –ø–æ–∫–∞–∑ –æ–±—Ä–µ–∑–∫–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ (–º—ã –¥–æ–±–∞–≤–∏–º —ç—Ç–æ –∞–Ω–∏–º–∞—Ü–∏–µ–π).
- –í—Å—ë –≥–æ—Ç–æ–≤–æ –∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –º—É–ª—å—Ç–∏—è–∑—ã—á–Ω–æ—Å—Ç–∏.
- –í –¥–∞–ª—å–Ω–µ–π—à–µ–º —É–ª—É—á—à–∏–º –æ–±—Ä–∞–±–æ—Ç–∫—É OpenCV, —á—Ç–æ–±—ã –ª–æ–≤–∏—Ç—å **–ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ + —Ç–µ–∫—Å—Ç**.

---

# üöÄ –ï—Å–ª–∏ —Ö–æ—á–µ—à—å:
**–Ø –º–æ–≥—É —Å—Ä–∞–∑—É –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ—à–∞–≥–æ–≤—ã–π –ø–ª–∞–Ω, –∫–∞–∫ —Å–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç, —á—Ç–æ–±—ã –≤—Å—ë –∑–∞—Ä–∞–±–æ—Ç–∞–ª–æ –±–µ–∑ –æ—à–∏–±–æ–∫**.

–•–æ—á–µ—à—å? üëÄ  
(–µ—Å–ª–∏ –¥–∞ ‚Äî —Å–∫–∞–∂–∏ "–¥–∞–≤–∞–π –ø–ª–∞–Ω!")